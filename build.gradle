plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    //사용할 스프링 클라우드 버전 정의
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    //스프링 웹을 토대로 해서 설정 서버를 구축할 수 있는 라이브러리와 유틸리티 제공
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    //스프링 테스트, JUnit, 어서트J, 모키토를 포함해 애플리케이션을 테스트할 수 있는 여러 라이브러리 및 유틸리티를 제공
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        //스프링 클라우드 의존성 관리를 위한 BOM(bill of material)
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//빌드팩을 사용해 OCI 이미지를 빌드하기 위한 스프링 부트 플러그인 작업
bootBuildImage{
    imageName = "${project.name}"   //버전 번호를 사용하지 않고 암묵적인 latest 태그를 사용
    environment = ["BP_JVM_VERSION" : "17.*"] //이미지에 설치할 JVM버전

    docker {
        //컨테이너 저장소 인증을 설정하기 위한 섹션. 값은 gradle 속성을 통해 전달
        publishRegistry {
            url = project.findProperty("registryUrl")
            username = project.findProperty("registryUsername")
            password = project.findProperty("registryToken")
        }
    }
}

